{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN\\\\react-news-search-and-bookmark-master\\\\src\\\\components\\\\CategorySourceSearchForm.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { FaExchangeAlt } from 'react-icons/fa';\nimport { FaSearch } from 'react-icons/fa';\n\nconst CategorySourceSearch = ({\n  onCategorySourceSearch,\n  news\n}) => {\n  const [type, setType] = useState('category');\n  const [country, setCountry] = useState('');\n  const [category, setCategory] = useState('');\n  const [source, setSource] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const changeType = () => {\n    if (type === 'category') {\n      setCountry('');\n      setCategory('');\n      setType('source');\n    } else {\n      setSource('');\n      setType('category');\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (country || source) {\n      onCategorySourceSearch(`top-headlines?country=${country}&category=${category}&sources=${source}&q=${searchQuery}`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: `heroContainer-${news.theme}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-md-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: true,\n    lg: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"mt-3\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, type === 'category' && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"4\",\n    sm: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    defaultValue: country,\n    onChange: e => setCountry(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Select Country\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"us\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"United States of America\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"gb\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"United Kingdom\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ca\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Canada\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"cn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"China\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ru\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \"Russia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"fr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"France\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Philippines\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ae\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, \"United Arab Emirates\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"au\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"Australia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"ar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \"Argentina\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, \"South Korea\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Indonesia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"India\")))), /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    sm: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    defaultValue: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, \"All Category\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"business\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"Business\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"entertainment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, \"Entertainment\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"general\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"General\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"health\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"Health\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"science\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Science\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sports\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"Sports\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"technology\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Technology\"))))), type === 'source' && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"7\",\n    sm: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    defaultValue: source,\n    onChange: e => setSource(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, \" Choose Source\"), news.newsSource.map(source => /*#__PURE__*/React.createElement(\"option\", {\n    key: source.id,\n    value: source.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 27\n    }\n  }, source.name)), news.newsSource.length === 0 && !news.newsSourceError && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, \"Loading News Source...\"), news.newsSource.length === 0 && news.newsSourceError && /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, \"Error Loading News Source\"))))), /*#__PURE__*/React.createElement(Col, {\n    md: \"3\",\n    sm: \"3\",\n    className: \"mb-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Keywords (optional)\",\n    name: \"searchQuery\",\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"2\",\n    sm: \"2\",\n    className: \"mb-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: news.theme,\n    type: \"submit\",\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, news.newsLoading ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    as: \"span\",\n    animation: \"border\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }\n  }, \"Loading...\")) : /*#__PURE__*/React.createElement(FaSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: news.theme,\n    onClick: () => {\n      changeType();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FaExchangeAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nconst mapStateToProps = state => ({\n  news: state.news\n});\n\nexport default connect(mapStateToProps, null)(CategorySourceSearch);","map":{"version":3,"sources":["E:/MERN/react-news-search-and-bookmark-master/src/components/CategorySourceSearchForm.jsx"],"names":["React","Fragment","useState","connect","Container","Row","Col","Form","Button","Spinner","FaExchangeAlt","FaSearch","CategorySourceSearch","onCategorySourceSearch","news","type","setType","country","setCountry","category","setCategory","source","setSource","searchQuery","setSearchQuery","changeType","onSubmit","e","preventDefault","theme","target","value","newsSource","map","id","name","length","newsSourceError","newsLoading","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { FaExchangeAlt } from 'react-icons/fa';\nimport { FaSearch } from 'react-icons/fa';\n\nconst CategorySourceSearch = ({ onCategorySourceSearch, news }) => {\n  const [type, setType] = useState('category');\n  const [country, setCountry] = useState('');\n  const [category, setCategory] = useState('');\n  const [source, setSource] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const changeType = () => {\n    if (type === 'category') {\n      setCountry('');\n      setCategory('');\n      setType('source');\n    } else {\n      setSource('');\n      setType('category');\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (country || source) {\n      onCategorySourceSearch(\n        `top-headlines?country=${country}&category=${category}&sources=${source}&q=${searchQuery}`\n      );\n    }\n  };\n\n  return (\n    <Container fluid className={`heroContainer-${news.theme}`}>\n      <Row className='justify-content-md-center'>\n        <Col xs lg='8'>\n          <Form className='mt-3' onSubmit={onSubmit}>\n            <Form.Row>\n              {type === 'category' && (\n                <Fragment>\n                  <Col md='4' sm='4'>\n                    <Form.Group>\n                      <Form.Control\n                        as='select'\n                        defaultValue={country}\n                        onChange={e => setCountry(e.target.value)}\n                      >\n                        <option value=''>Select Country</option>\n                        <option value='us'>United States of America</option>\n                        <option value='gb'>United Kingdom</option>\n                        <option value='ca'>Canada</option>\n                        <option value='cn'>China</option>\n                        <option value='ru'>Russia</option>\n                        <option value='fr'>France</option>\n                        <option value='ph'>Philippines</option>\n                        <option value='ae'>United Arab Emirates</option>\n                        <option value='au'>Australia</option>\n                        <option value='ar'>Argentina</option>\n                        <option value='kr'>South Korea</option>\n                        <option value='id'>Indonesia</option>\n                        <option value='in'>India</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Col>\n                  <Col md='3' sm='3'>\n                    <Form.Group>\n                      <Form.Control\n                        as='select'\n                        defaultValue={category}\n                        onChange={e => setCategory(e.target.value)}\n                      >\n                        <option value=''>All Category</option>\n                        <option value='business'>Business</option>\n                        <option value='entertainment'>Entertainment</option>\n                        <option value='general'>General</option>\n                        <option value='health'>Health</option>\n                        <option value='science'>Science</option>\n                        <option value='sports'>Sports</option>\n                        <option value='technology'>Technology</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Col>\n                </Fragment>\n              )}\n              {type === 'source' && (\n                <Fragment>\n                  <Col md='7' sm='7'>\n                    <Form.Group>\n                      <Form.Control\n                        as='select'\n                        defaultValue={source}\n                        onChange={e => setSource(e.target.value)}\n                      >\n                        <option value=''> Choose Source</option>\n                        {news.newsSource.map(source => (\n                          <option key={source.id} value={source.id}>\n                            {source.name}\n                          </option>\n                        ))}\n                        {news.newsSource.length === 0 &&\n                          !news.newsSourceError && (\n                            <option value=''>Loading News Source...</option>\n                          )}\n                        {news.newsSource.length === 0 &&\n                          news.newsSourceError && (\n                            <option value=''>Error Loading News Source</option>\n                          )}\n                      </Form.Control>\n                    </Form.Group>\n                  </Col>\n                </Fragment>\n              )}\n\n              <Col md='3' sm='3' className='mb-3 '>\n                <Form.Control\n                  placeholder='Keywords (optional)'\n                  name='searchQuery'\n                  value={searchQuery}\n                  onChange={e => setSearchQuery(e.target.value)}\n                />\n              </Col>\n              <Col md='2' sm='2' className='mb-3 '>\n                <Button variant={news.theme} type='submit' className='mr-1'>\n                  {news.newsLoading ? (\n                    <Fragment>\n                      <Spinner\n                        as='span'\n                        animation='border'\n                        size='sm'\n                        role='status'\n                        aria-hidden='true'\n                      />\n                      <span className='sr-only'>Loading...</span>\n                    </Fragment>\n                  ) : (\n                    <FaSearch />\n                  )}\n                </Button>\n                <Button\n                  variant={news.theme}\n                  onClick={() => {\n                    changeType();\n                  }}\n                >\n                  <FaExchangeAlt />\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({\n  news: state.news\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CategorySourceSearch);\n"]},"metadata":{},"sourceType":"module"}
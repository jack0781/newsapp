{"ast":null,"code":"import { SET_NEWS_LOADING, SET_TOP_NEWS, CLEAR_TOP_NEWS, TOP_NEWS_ERROR, SET_SOURCE_LOADING, GET_NEWS_SOURCE, NEWS_SOURCE_ERROR, CHANGE_THEME, SET_THEME } from '../actions/types';\nconst initialState = {\n  newsLoading: false,\n  newsSourceLoading: false,\n  newsSource: [],\n  newsItems: [],\n  newsItemsTotal: null,\n  pageSize: 50,\n  theme: null,\n  newsSourceError: false,\n  topNewsError: false\n};\nexport default ((state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SET_THEME:\n      return { ...state,\n        theme: payload\n      };\n\n    case CHANGE_THEME:\n      return { ...state,\n        theme: payload\n      };\n\n    case SET_NEWS_LOADING:\n      return { ...state,\n        newsLoading: true\n      };\n\n    case SET_TOP_NEWS:\n      return { ...state,\n        topNewsError: false,\n        newsItems: [...state.newsItems, ...payload.articles],\n        newsItemsTotal: payload.totalResults,\n        newsLoading: false\n      };\n\n    case CLEAR_TOP_NEWS:\n      return { ...state,\n        newsItems: [],\n        newsItemsTotal: null\n      };\n\n    case TOP_NEWS_ERROR:\n      return { ...state,\n        newsItems: [],\n        newsLoading: false,\n        newsItemsTotal: 0,\n        topNewsError: true\n      };\n\n    case SET_SOURCE_LOADING:\n      return { ...state,\n        newsSourceLoading: true\n      };\n\n    case GET_NEWS_SOURCE:\n      return { ...state,\n        newsSourceError: false,\n        newsSourceLoading: false,\n        newsSource: payload\n      };\n\n    case NEWS_SOURCE_ERROR:\n      return { ...state,\n        newsSourceLoading: false,\n        newsSource: [],\n        newsSourceError: true\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["E:/MERN/react-news-search-and-bookmark-master/src/reducers/news.js"],"names":["SET_NEWS_LOADING","SET_TOP_NEWS","CLEAR_TOP_NEWS","TOP_NEWS_ERROR","SET_SOURCE_LOADING","GET_NEWS_SOURCE","NEWS_SOURCE_ERROR","CHANGE_THEME","SET_THEME","initialState","newsLoading","newsSourceLoading","newsSource","newsItems","newsItemsTotal","pageSize","theme","newsSourceError","topNewsError","state","action","type","payload","articles","totalResults"],"mappings":"AAAA,SACEA,gBADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,kBALF,EAMEC,eANF,EAOEC,iBAPF,EAQEC,YARF,EASEC,SATF,QAUO,kBAVP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,iBAAiB,EAAE,KAFA;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,SAAS,EAAE,EAJQ;AAKnBC,EAAAA,cAAc,EAAE,IALG;AAMnBC,EAAAA,QAAQ,EAAE,EANS;AAOnBC,EAAAA,KAAK,EAAE,IAPY;AAQnBC,EAAAA,eAAe,EAAE,KARE;AASnBC,EAAAA,YAAY,EAAE;AATK,CAArB;AAYA,gBAAe,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKb,SAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,KAAK,EAAEM;AAFF,OAAP;;AAIF,SAAKf,YAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELH,QAAAA,KAAK,EAAEM;AAFF,OAAP;;AAIF,SAAKtB,gBAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELT,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAIF,SAAKT,YAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELD,QAAAA,YAAY,EAAE,KAFT;AAGLL,QAAAA,SAAS,EAAE,CAAC,GAAGM,KAAK,CAACN,SAAV,EAAqB,GAAGS,OAAO,CAACC,QAAhC,CAHN;AAILT,QAAAA,cAAc,EAAEQ,OAAO,CAACE,YAJnB;AAKLd,QAAAA,WAAW,EAAE;AALR,OAAP;;AAOF,SAAKR,cAAL;AACE,aAAO,EACL,GAAGiB,KADE;AAELN,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,cAAc,EAAE;AAHX,OAAP;;AAKF,SAAKX,cAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELN,QAAAA,SAAS,EAAE,EAFN;AAGLH,QAAAA,WAAW,EAAE,KAHR;AAILI,QAAAA,cAAc,EAAE,CAJX;AAKLI,QAAAA,YAAY,EAAE;AALT,OAAP;;AAOF,SAAKd,kBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELR,QAAAA,iBAAiB,EAAE;AAFd,OAAP;;AAIF,SAAKN,eAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELF,QAAAA,eAAe,EAAE,KAFZ;AAGLN,QAAAA,iBAAiB,EAAE,KAHd;AAILC,QAAAA,UAAU,EAAEU;AAJP,OAAP;;AAMF,SAAKhB,iBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELR,QAAAA,iBAAiB,EAAE,KAFd;AAGLC,QAAAA,UAAU,EAAE,EAHP;AAILK,QAAAA,eAAe,EAAE;AAJZ,OAAP;;AAMF;AACE,aAAOE,KAAP;AA1DJ;AA4DD,CA9DD","sourcesContent":["import {\n  SET_NEWS_LOADING,\n  SET_TOP_NEWS,\n  CLEAR_TOP_NEWS,\n  TOP_NEWS_ERROR,\n  SET_SOURCE_LOADING,\n  GET_NEWS_SOURCE,\n  NEWS_SOURCE_ERROR,\n  CHANGE_THEME,\n  SET_THEME\n} from '../actions/types';\n\nconst initialState = {\n  newsLoading: false,\n  newsSourceLoading: false,\n  newsSource: [],\n  newsItems: [],\n  newsItemsTotal: null,\n  pageSize: 50,\n  theme: null,\n  newsSourceError: false,\n  topNewsError: false\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_THEME:\n      return {\n        ...state,\n        theme: payload\n      };\n    case CHANGE_THEME:\n      return {\n        ...state,\n        theme: payload\n      };\n    case SET_NEWS_LOADING:\n      return {\n        ...state,\n        newsLoading: true\n      };\n    case SET_TOP_NEWS:\n      return {\n        ...state,\n        topNewsError: false,\n        newsItems: [...state.newsItems, ...payload.articles],\n        newsItemsTotal: payload.totalResults,\n        newsLoading: false\n      };\n    case CLEAR_TOP_NEWS:\n      return {\n        ...state,\n        newsItems: [],\n        newsItemsTotal: null\n      };\n    case TOP_NEWS_ERROR:\n      return {\n        ...state,\n        newsItems: [],\n        newsLoading: false,\n        newsItemsTotal: 0,\n        topNewsError: true\n      };\n    case SET_SOURCE_LOADING:\n      return {\n        ...state,\n        newsSourceLoading: true\n      };\n    case GET_NEWS_SOURCE:\n      return {\n        ...state,\n        newsSourceError: false,\n        newsSourceLoading: false,\n        newsSource: payload\n      };\n    case NEWS_SOURCE_ERROR:\n      return {\n        ...state,\n        newsSourceLoading: false,\n        newsSource: [],\n        newsSourceError: true\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { BOOKMARK_ITEM, UNBOOKMARK_ITEM, GET_BOOKMARK_ITEMS } from './types';\nexport const bookmarkItem = item => (dispatch, getState) => {\n  const {\n    bookmarkItems\n  } = getState().bookmarks;\n  localStorage.setItem('bookmarks', JSON.stringify([item, ...bookmarkItems]));\n  dispatch({\n    type: BOOKMARK_ITEM,\n    payload: item\n  });\n};\nexport const unBookmarkItem = item => (dispatch, getState) => {\n  const {\n    bookmarkItems\n  } = getState().bookmarks;\n  const newBookmarkItems = bookmarkItems.filter(bookmarkItem => bookmarkItem !== item);\n  localStorage.setItem('bookmarks', JSON.stringify(newBookmarkItems));\n  dispatch({\n    type: UNBOOKMARK_ITEM,\n    payload: item\n  });\n};\nexport const getBookmarkItems = () => {\n  let bookmarkItems = localStorage.getItem('bookmarks');\n\n  if (bookmarkItems === null) {\n    bookmarkItems = [];\n  } else {\n    bookmarkItems = JSON.parse(bookmarkItems);\n  }\n\n  return {\n    type: GET_BOOKMARK_ITEMS,\n    payload: bookmarkItems\n  };\n};","map":{"version":3,"sources":["E:/MERN/react-news-search-and-bookmark-master/src/actions/bookmarks.js"],"names":["BOOKMARK_ITEM","UNBOOKMARK_ITEM","GET_BOOKMARK_ITEMS","bookmarkItem","item","dispatch","getState","bookmarkItems","bookmarks","localStorage","setItem","JSON","stringify","type","payload","unBookmarkItem","newBookmarkItems","filter","getBookmarkItems","getItem","parse"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,eAAxB,EAAyCC,kBAAzC,QAAmE,SAAnE;AAEA,OAAO,MAAMC,YAAY,GAAGC,IAAI,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC1D,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,QAAQ,GAAGE,SAArC;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe,CAACR,IAAD,EAAO,GAAGG,aAAV,CAAf,CAAlC;AACAF,EAAAA,QAAQ,CAAC;AACPQ,IAAAA,IAAI,EAAEb,aADC;AAEPc,IAAAA,OAAO,EAAEV;AAFF,GAAD,CAAR;AAID,CAPM;AASP,OAAO,MAAMW,cAAc,GAAGX,IAAI,IAAI,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC5D,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,QAAQ,GAAGE,SAArC;AACA,QAAMQ,gBAAgB,GAAGT,aAAa,CAACU,MAAd,CACvBd,YAAY,IAAIA,YAAY,KAAKC,IADV,CAAzB;AAGAK,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeI,gBAAf,CAAlC;AACAX,EAAAA,QAAQ,CAAC;AACPQ,IAAAA,IAAI,EAAEZ,eADC;AAEPa,IAAAA,OAAO,EAAEV;AAFF,GAAD,CAAR;AAID,CAVM;AAYP,OAAO,MAAMc,gBAAgB,GAAG,MAAM;AACpC,MAAIX,aAAa,GAAGE,YAAY,CAACU,OAAb,CAAqB,WAArB,CAApB;;AACA,MAAIZ,aAAa,KAAK,IAAtB,EAA4B;AAC1BA,IAAAA,aAAa,GAAG,EAAhB;AACD,GAFD,MAEO;AACLA,IAAAA,aAAa,GAAGI,IAAI,CAACS,KAAL,CAAWb,aAAX,CAAhB;AACD;;AACD,SAAO;AACLM,IAAAA,IAAI,EAAEX,kBADD;AAELY,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CAXM","sourcesContent":["import { BOOKMARK_ITEM, UNBOOKMARK_ITEM, GET_BOOKMARK_ITEMS } from './types';\n\nexport const bookmarkItem = item => (dispatch, getState) => {\n  const { bookmarkItems } = getState().bookmarks;\n  localStorage.setItem('bookmarks', JSON.stringify([item, ...bookmarkItems]));\n  dispatch({\n    type: BOOKMARK_ITEM,\n    payload: item\n  });\n};\n\nexport const unBookmarkItem = item => (dispatch, getState) => {\n  const { bookmarkItems } = getState().bookmarks;\n  const newBookmarkItems = bookmarkItems.filter(\n    bookmarkItem => bookmarkItem !== item\n  );\n  localStorage.setItem('bookmarks', JSON.stringify(newBookmarkItems));\n  dispatch({\n    type: UNBOOKMARK_ITEM,\n    payload: item\n  });\n};\n\nexport const getBookmarkItems = () => {\n  let bookmarkItems = localStorage.getItem('bookmarks');\n  if (bookmarkItems === null) {\n    bookmarkItems = [];\n  } else {\n    bookmarkItems = JSON.parse(bookmarkItems);\n  }\n  return {\n    type: GET_BOOKMARK_ITEMS,\n    payload: bookmarkItems\n  };\n};\n"]},"metadata":{},"sourceType":"module"}